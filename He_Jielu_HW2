{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import statsmodels.api as sm\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\n",
    "from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.naive_bayes import GaussianNB\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.metrics import accuracy_score, roc_curve, auc\n",
    "from sklearn.model_selection import train_test_split\n",
    "from math import exp"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 1 The Bayes Classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "#a. Set random number generator seed\n",
    "np.random.seed(2019)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "#b. Simulate a dataset of N = 200 with X1, X2 \n",
    "x1 = np.random.uniform(-1, 1, 200)\n",
    "x2 = np.random.uniform(-1, 1, 200)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "#c. CalculateY =X1+X12+X2+X2+ε,whereε∼N(μ=0,σ2=0.25).\n",
    "y = x1 + x1**2 + x2 + x2**2 + np.random.normal(0, 0.5, 200)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.82849187, 0.4608178 , 0.51176518, 0.60518982, 0.90938358,\n",
       "       0.59006533, 0.96321944, 0.75761982, 0.94968088, 0.48865303,\n",
       "       0.52303872, 0.90609121, 0.74523342, 0.64021733, 0.79025966,\n",
       "       0.96359111, 0.53661513, 0.47997726, 0.32117233, 0.56016197,\n",
       "       0.5738233 , 0.56393526, 0.47938579, 0.5309953 , 0.59683373,\n",
       "       0.54477001, 0.57012001, 0.44425388, 0.83193474, 0.37961348,\n",
       "       0.69761183, 0.85921594, 0.6296643 , 0.94861151, 0.84212708,\n",
       "       0.71464094, 0.6528656 , 0.63641372, 0.46855042, 0.72024099,\n",
       "       0.83368541, 0.2684377 , 0.50721412, 0.84434893, 0.60625281,\n",
       "       0.91224952, 0.75334057, 0.75879306, 0.57100548, 0.98242394,\n",
       "       0.4034332 , 0.46750637, 0.47205267, 0.82830874, 0.67958694,\n",
       "       0.84624222, 0.38998106, 0.60138008, 0.43033285, 0.58575614,\n",
       "       0.72992691, 0.44086161, 0.21546613, 0.83660791, 0.70091667,\n",
       "       0.65390153, 0.8829348 , 0.72034761, 0.46351842, 0.85942801,\n",
       "       0.29297696, 0.40447946, 0.65573051, 0.83797823, 0.63467034,\n",
       "       0.7319606 , 0.97979748, 0.22591391, 0.78143954, 0.64677296,\n",
       "       0.27131764, 0.66862327, 0.60950501, 0.48062551, 0.93391771,\n",
       "       0.56902771, 0.38568622, 0.348932  , 0.62494238, 0.34982382,\n",
       "       0.35166567, 0.81298598, 0.59648047, 0.86957333, 0.71943754,\n",
       "       0.45679997, 0.48496706, 0.72286644, 0.29538359, 0.79582533,\n",
       "       0.46760114, 0.67828772, 0.67883433, 0.65168941, 0.83776143,\n",
       "       0.61611539, 0.98303505, 0.59678071, 0.60085863, 0.52494716,\n",
       "       0.53873482, 0.63684489, 0.50774389, 0.62360852, 0.63971866,\n",
       "       0.95834086, 0.70657401, 0.37470773, 0.5739381 , 0.34114826,\n",
       "       0.43596874, 0.80545546, 0.16948187, 0.57523725, 0.47504385,\n",
       "       0.7978173 , 0.91738198, 0.76164394, 0.86292607, 0.5341799 ,\n",
       "       0.43914779, 0.44464322, 0.3554489 , 0.27323623, 0.89913037,\n",
       "       0.81451059, 0.64782501, 0.92054441, 0.89216021, 0.31424726,\n",
       "       0.9623672 , 0.92904984, 0.9808496 , 0.69442947, 0.50784292,\n",
       "       0.48764802, 0.41643588, 0.69705644, 0.2148158 , 0.50237935,\n",
       "       0.69171392, 0.40122293, 0.75039878, 0.81354675, 0.9422711 ,\n",
       "       0.84681109, 0.28927443, 0.67763596, 0.32093472, 0.57147493,\n",
       "       0.39206698, 0.70836429, 0.3435361 , 0.54154384, 0.69181114,\n",
       "       0.27088757, 0.61302608, 0.88045321, 0.54098313, 0.85206581,\n",
       "       0.34219011, 0.35369037, 0.5021619 , 0.69137368, 0.77531435,\n",
       "       0.53858279, 0.35298938, 0.6533829 , 0.67150222, 0.81353448,\n",
       "       0.8856535 , 0.84202067, 0.24510023, 0.70479358, 0.957143  ,\n",
       "       0.44740698, 0.36650411, 0.82491493, 0.91924921, 0.70098476,\n",
       "       0.52979499, 0.24490036, 0.86720487, 0.45146117, 0.59474726,\n",
       "       0.62640475, 0.70520926, 0.23437945, 0.67202643, 0.90593173])"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#d. Y is defined in terms of the log-odds of success on the domain [−∞, +∞]. Calculate the probability of success bounded between [0, 1].\n",
    "def cal_prob(x):\n",
    "    p = np.exp(np.array(x))/(1 + np.exp(np.array(x)))\n",
    "    return p\n",
    "\n",
    "p = cal_prob(Y)\n",
    "p_tf=p>0.5\n",
    "p"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#e-h.\n",
    "nb = GaussianNB().fit(X.transpose(), p_tf)\n",
    "xx, yy = np.meshgrid(np.linspace(-1, 1, 100), np.linspace(-1, 1, 100))\n",
    "Z = nb.predict_proba(np.c_[xx.ravel(), yy.ravel()])\n",
    "Z = Z[:,1].reshape(xx.shape)\n",
    "\n",
    "data = np.vstack((X, p_tf))\n",
    "df = pd.DataFrame(dict(x=data[0,:], y=data[1,:], label=data[2,:]))\n",
    "\n",
    "groups = df.groupby('label')\n",
    "f, x = plt.subplots()\n",
    "for name, group in groups:\n",
    "    x.plot(group.x, group.y, marker='o', linestyle='', ms=8, label=name)\n",
    "x.contour(xx, yy, Z,  [0.5], colors='blue') \n",
    "\n",
    "plt.xlabel('X1')\n",
    "plt.ylabel('X2')\n",
    "plt.title('The Bayes Classifer')\n",
    "plt.legend(['success','failure'], loc=1)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2 Exploring Simulated Differences between LDA and QDA"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2\n",
    "If the Bayes boundary is linear, QDA will perform better on the training set. Because the higher the flexiblity, the closer fit will QDA gets. But LDA will perform better on the test set,because QDA could overfits the training set, which leads to a bad performance on the Bayes decision boundary."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "#a. Repeat the following process 1000 times.\n",
    "\n",
    "def linear(n): \n",
    "        #Simulate a dataset of 1000 observation\n",
    "        x1_2 = np.random.uniform(-1,1,1000)\n",
    "        x2_2 = np.random.uniform(-1,1,1000)\n",
    "        Y = (x1_2 + x2_2 + np.random.normal(size = 1000))>=0\n",
    "        data=np.vstack((x1_2, x2_2, Y)) \n",
    "        s = np.arange(1000)\n",
    "        np.random.shuffle(s)\n",
    "        \n",
    "        #Randomly split the dataset into 70/30% training/test sets\n",
    "        train_idx = seq[:700]\n",
    "        test_idx = seq[700:] \n",
    "        train, test = data[:,train_idx], data[:,test_idx]    \n",
    "        x_train = train[:2,:].T\n",
    "        y_train = train[2,:].T\n",
    "        x_test=test[:2,:].T\n",
    "        y_test=test[2,:].T\n",
    "        \n",
    "        #Use the training dataset to estimate LDA and QDA models.\n",
    "        # LDA model\n",
    "        lda = LinearDiscriminantAnalysis()\n",
    "        lda_model = lda.fit(x_train,y_train)\n",
    "        # QDA model\n",
    "        qda = QuadraticDiscriminantAnalysis()\n",
    "        qda_model= qda.fit(x_train, y_train)\n",
    "        \n",
    "       # Calculate each model’s training and test error rate.        \n",
    "        lda_train = 1 - lda_model.score(x_train, y_train)\n",
    "        lda_test = 1 - lda_model.score(x_test, y_test)\n",
    "        qda_train = 1 - qda_model.score(x_train, y_train)\n",
    "        qda_test  = 1 - qda_model.score(x_test, y_test)\n",
    "        \n",
    "        return lda_train, lda_test, qda_train, qda_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Repeat the following process 1000 times.\n",
    "lda_train_err = np.zeros(1000)\n",
    "lda_test_err = np.zeros(1000)\n",
    "qda_train_err = np.zeros(1000)\n",
    "qda_test_err = np.zeros(1000)\n",
    "\n",
    "\n",
    "for i in range(1000):\n",
    "    lda_train, lda_test, qda_train, qda_test=linear(i)\n",
    "    lda_train_err[i] = lda_train\n",
    "    lda_test_err[i] = lda_test\n",
    "    qda_train_err[i] = qda_train\n",
    "    qda_test_err[i] = qda_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LDA_train</th>\n",
       "      <th>LDA_test</th>\n",
       "      <th>QDA_train</th>\n",
       "      <th>QDA_test</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.273091</td>\n",
       "      <td>0.276090</td>\n",
       "      <td>0.272161</td>\n",
       "      <td>0.276303</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.016366</td>\n",
       "      <td>0.025906</td>\n",
       "      <td>0.016601</td>\n",
       "      <td>0.026090</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.222857</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>0.220000</td>\n",
       "      <td>0.203333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.261429</td>\n",
       "      <td>0.260000</td>\n",
       "      <td>0.261429</td>\n",
       "      <td>0.260000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.272857</td>\n",
       "      <td>0.276667</td>\n",
       "      <td>0.272857</td>\n",
       "      <td>0.276667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.284286</td>\n",
       "      <td>0.293333</td>\n",
       "      <td>0.282857</td>\n",
       "      <td>0.293333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.327143</td>\n",
       "      <td>0.360000</td>\n",
       "      <td>0.328571</td>\n",
       "      <td>0.356667</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         LDA_train     LDA_test    QDA_train     QDA_test\n",
       "count  1000.000000  1000.000000  1000.000000  1000.000000\n",
       "mean      0.273091     0.276090     0.272161     0.276303\n",
       "std       0.016366     0.025906     0.016601     0.026090\n",
       "min       0.222857     0.200000     0.220000     0.203333\n",
       "25%       0.261429     0.260000     0.261429     0.260000\n",
       "50%       0.272857     0.276667     0.272857     0.276667\n",
       "75%       0.284286     0.293333     0.282857     0.293333\n",
       "max       0.327143     0.360000     0.328571     0.356667"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#b. Summarize all the simulations’ error rates and report the results in tabular and graphical form.\n",
    "\n",
    "df = pd.DataFrame({'LDA_train':lda_train_err,\n",
    "                   'LDA_test':lda_test_err,\n",
    "                   'QDA_train':qda_train_err,\n",
    "                   'QDA_test':qda_test_err                   \n",
    "                   })\n",
    "df.describe() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Draw the boxplot\n",
    "sns.boxplot(data=df)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "According to the result, QDA performs better on the trainning set LDA performs better on test set. This supports my answer above."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 3\n",
    "If the Bayes boundary is nonlinear, QDA performs better on both the training set and test set. Because the high flexibility allows QDA to perform better on describing the nonlinear relationship."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "#a. Repeat the following process 1000 times.\n",
    "\n",
    "def nonlinear(n): \n",
    "        np.random.seed(n)\n",
    "        #Simulate a dataset of 1000 observation\n",
    "        x1_2 = np.random.uniform(-1,1,1000)\n",
    "        x2_2 = np.random.uniform(-1,1,1000)\n",
    "        Y = (x1_2 + x1_2**2 + x2_2 + x2_2**2 + np.random.normal(size = 1000))>=0\n",
    "        data=np.vstack((x1_2, x2_2, Y)) \n",
    "        s = np.arange(1000)\n",
    "        np.random.shuffle(s)\n",
    "        \n",
    "        #Randomly split your dataset into 70/30% training/test sets\n",
    "        train_idx = s[:700]\n",
    "        test_idx = s[700:] \n",
    "        train, test = data[:,train_idx], data[:,test_idx]    \n",
    "        x_train = train[:2,:].T\n",
    "        y_train = train[2,:].T\n",
    "        x_test=test[:2,:].T\n",
    "        y_test=test[2,:].T\n",
    "        \n",
    "        #Use the training dataset to estimate LDA and QDA models.\n",
    "        # LDA model\n",
    "        lda = LinearDiscriminantAnalysis()\n",
    "        lda_model = lda.fit(x_train,y_train)\n",
    "        # QDA model\n",
    "        qda = QuadraticDiscriminantAnalysis()\n",
    "        qda_model= qda.fit(x_train, y_train)\n",
    "        \n",
    "       # Calculate each model’s training and test error rate.        \n",
    "        lda_train = 1 - lda_model.score(x_train, y_train)\n",
    "        lda_test = 1 - lda_model.score(x_test, y_test)\n",
    "        qda_train = 1 - qda_model.score(x_train, y_train)\n",
    "        qda_test  = 1 - qda_model.score(x_test, y_test)\n",
    "        \n",
    "        return lda_train, lda_test, qda_train, qda_test\n",
    "\n",
    "lda_train_err = np.zeros(1000)\n",
    "lda_test_err = np.zeros(1000)\n",
    "qda_train_err = np.zeros(1000)\n",
    "qda_test_err = np.zeros(1000)\n",
    "\n",
    "\n",
    "for i in range(1000):\n",
    "    lda_train, lda_test, qda_train, qda_test=nonlinear(i)\n",
    "    lda_train_err[i] = lda_train\n",
    "    lda_test_err[i] = lda_test\n",
    "    qda_train_err[i] = qda_train\n",
    "    qda_test_err[i] = qda_test\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LDA_train</th>\n",
       "      <th>LDA_test</th>\n",
       "      <th>QDA_train</th>\n",
       "      <th>QDA_test</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.272387</td>\n",
       "      <td>0.274833</td>\n",
       "      <td>0.259020</td>\n",
       "      <td>0.261623</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.016924</td>\n",
       "      <td>0.025222</td>\n",
       "      <td>0.016340</td>\n",
       "      <td>0.024093</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.221429</td>\n",
       "      <td>0.196667</td>\n",
       "      <td>0.204286</td>\n",
       "      <td>0.186667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.261429</td>\n",
       "      <td>0.256667</td>\n",
       "      <td>0.247143</td>\n",
       "      <td>0.243333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.271429</td>\n",
       "      <td>0.273333</td>\n",
       "      <td>0.258571</td>\n",
       "      <td>0.260000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.284286</td>\n",
       "      <td>0.290000</td>\n",
       "      <td>0.270000</td>\n",
       "      <td>0.276667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.322857</td>\n",
       "      <td>0.363333</td>\n",
       "      <td>0.311429</td>\n",
       "      <td>0.343333</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         LDA_train     LDA_test    QDA_train     QDA_test\n",
       "count  1000.000000  1000.000000  1000.000000  1000.000000\n",
       "mean      0.272387     0.274833     0.259020     0.261623\n",
       "std       0.016924     0.025222     0.016340     0.024093\n",
       "min       0.221429     0.196667     0.204286     0.186667\n",
       "25%       0.261429     0.256667     0.247143     0.243333\n",
       "50%       0.271429     0.273333     0.258571     0.260000\n",
       "75%       0.284286     0.290000     0.270000     0.276667\n",
       "max       0.322857     0.363333     0.311429     0.343333"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#b. Summarize all the simulations’ error rates and report the results in tabular and graphical form.\n",
    "df = pd.DataFrame({'LDA_train':lda_train_err,\n",
    "                   'LDA_test':lda_test_err,\n",
    "                   'QDA_train':qda_train_err,\n",
    "                   'QDA_test':qda_test_err                   \n",
    "                   })\n",
    "#Summarize all the simulations’ error rates\n",
    "df.describe() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Draw the boxplot\n",
    "sns.boxplot(data=df)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "According to the result, QDA performs better on both the trainning set and test set. This supports my answer above."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 4\n",
    "When the sample size is relatively small,the test prediction accuracy of LDA is better than QDA. Because LDA is less likely to be overfitting than QDA. When sample size is large enough, the test prediction accuracy of QDA is better than LDA.Because the higher the flexibility, the closer fit will QDA gets and variance won't be a problem in terms of the larger sample sizes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [],
   "source": [
    "np.random.seed(10)\n",
    "def nonlinear_new(m): \n",
    "        #Simulate a dataset of 1000 observation\n",
    "        x1_3 = np.random.uniform(-1,1,m)\n",
    "        x2_3 = np.random.uniform(-1,1,m)\n",
    "        Y = (x1_3 + x1_3**2 + x2_3 + x2_3**2 + np.random.normal(size = m))>=0\n",
    "        data=np.vstack((x1_3, x2_3, Y)) \n",
    "        s = np.arange(m)\n",
    "        np.random.shuffle(s)\n",
    "        #Randomly split your dataset into 70/30% training/test sets\n",
    "        train_idx = s[:int(0.7*m)]\n",
    "        test_idx = s[int(0.7*m):] \n",
    "        train, test = data[:,train_idx], data[:,test_idx]    \n",
    "        x_train = train[:2,:].T\n",
    "        y_train = train[2,:].T\n",
    "        x_test=test[:2,:].T\n",
    "        y_test=test[2,:].T\n",
    "        \n",
    "        #Use the training dataset to estimate LDA and QDA models.\n",
    "        # LDA model\n",
    "        lda = LinearDiscriminantAnalysis()\n",
    "        lda_model = lda.fit(x_train,y_train)\n",
    "        # QDA model\n",
    "        qda = QuadraticDiscriminantAnalysis()\n",
    "        qda_model= qda.fit(x_train, y_train)\n",
    "        \n",
    "       # Calculate each model’s training and test error rate.        \n",
    "        lda_train = 1 - lda_model.score(x_train, y_train)\n",
    "        lda_test = 1 - lda_model.score(x_test, y_test)\n",
    "        qda_train = 1 - qda_model.score(x_train, y_train)\n",
    "        qda_test  = 1 - qda_model.score(x_test, y_test)\n",
    "        \n",
    "        return lda_train, lda_test, qda_train, qda_test\n",
    "\n",
    "# simulating 1000 times for N = [100, 1000, 10000, 100000]\n",
    "N = [10**2, 10**3, 10**4, 10**5]\n",
    "lda_err = np.zeros(len(N))\n",
    "qda_err = np.zeros(len(N))\n",
    "for i in range(len(N)):\n",
    "    lda_test_err = np.zeros(1000)\n",
    "    qda_test_err = np.zeros(1000)\n",
    "\n",
    "    \n",
    "    for j in range(1000):\n",
    "        lda_train, lda_test, qda_train, qda_test= nonlinear_new(N[i])\n",
    "        lda_test_err[j] = lda_test\n",
    "        qda_test_err[j] = qda_test\n",
    "        \n",
    "    lda_err[i] = lda_test_err.mean()\n",
    "    qda_err[i] =qda_test_err.mean() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sample Size</th>\n",
       "      <th>LDA_error</th>\n",
       "      <th>QDA_error</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>100</td>\n",
       "      <td>0.286333</td>\n",
       "      <td>0.274367</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1000</td>\n",
       "      <td>0.273327</td>\n",
       "      <td>0.260773</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10000</td>\n",
       "      <td>0.273855</td>\n",
       "      <td>0.261025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>100000</td>\n",
       "      <td>0.273349</td>\n",
       "      <td>0.260569</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Sample Size  LDA_error  QDA_error\n",
       "0         100   0.286333   0.274367\n",
       "1        1000   0.273327   0.260773\n",
       "2       10000   0.273855   0.261025\n",
       "3      100000   0.273349   0.260569"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d = {'Sample Size':[\"100\", \"1000\", \"10000\", \"100000\"], \n",
    "        'LDA_error':lda_err, \n",
    "        'QDA_error':qda_err} \n",
    "  \n",
    "df = pd.DataFrame(d) \n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ratio=np.array(qda_err/lda_err)\n",
    "plt.plot([1,2,3,4], ratio)\n",
    "plt.xticks([1,2,3,4], ['100', '1000', '10000', '100000'])\n",
    "plt.xlabel('Number of observations')\n",
    "plt.ylabel('QDA/LDA test error ratio')\n",
    "plt.title('QDA/LDA Test error ratio vs Number of observations')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "According to the above graph, we can expect the test error rate of QDA relative to LDA to decline, which proves my answer above."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 5 Modeling voter turnout"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>vote96</th>\n",
       "      <th>mhealth_sum</th>\n",
       "      <th>age</th>\n",
       "      <th>educ</th>\n",
       "      <th>black</th>\n",
       "      <th>female</th>\n",
       "      <th>married</th>\n",
       "      <th>inc10</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.8149</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>8.8273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.7387</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.6998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>8.8273</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    vote96  mhealth_sum   age  educ  black  female  married    inc10\n",
       "0      1.0          0.0  60.0  12.0      0       0      0.0   4.8149\n",
       "2      1.0          1.0  36.0  12.0      0       0      1.0   8.8273\n",
       "3      0.0          7.0  21.0  13.0      0       0      0.0   1.7387\n",
       "7      0.0          6.0  29.0  13.0      0       0      0.0  10.6998\n",
       "11     1.0          1.0  41.0  15.0      1       1      1.0   8.8273"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mh = pd.read_csv('mental_health.csv')\n",
    "mh.dropna(inplace=True)\n",
    "mh.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [],
   "source": [
    "#a. Split the data into a training and test set (70/30)\n",
    "np.random.seed(124)\n",
    "vote96 = mh['vote96']\n",
    "x = mh.drop(columns=['vote96'])\n",
    "x_train, x_test, y_train, y_test = train_test_split(x, vote96, test_size=0.3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "//anaconda3/lib/python3.7/site-packages/sklearn/linear_model/logistic.py:432: FutureWarning: Default solver will be changed to 'lbfgs' in 0.22. Specify a solver to silence this warning.\n",
      "  FutureWarning)\n"
     ]
    }
   ],
   "source": [
    "#b. Using the training set and all important predictors, estimate the following models with vote96 as the response variable:\n",
    "models=[]\n",
    "#i. Logistic regression model\n",
    "logit = LogisticRegression().fit(x_train, y_train)\n",
    "models.append(('Logistic', logit))\n",
    "\n",
    "#ii. Linear discriminant model\n",
    "lda = LinearDiscriminantAnalysis().fit(x_train, y_train)\n",
    "models.append(('LDA', lda))\n",
    "\n",
    "#iii. Quadratic discriminant model\n",
    "qda = QuadraticDiscriminantAnalysis().fit(x_train, y_train)\n",
    "models.append(('QDA', qda))\n",
    "\n",
    "#iv. Naive Bayes (you can use the default hyperparameter settings)\n",
    "nb = GaussianNB().fit(x_train, y_train)\n",
    "models.append(('Naive Bayes', nb))\n",
    "\n",
    "#v. K-nearest neighbors with K = 1,2,...,10 (that is, 10 separate models varying K) and Euclidean distance metrics\n",
    "m_knn = []\n",
    "for k in range(1,11):\n",
    "    knn= KNeighborsClassifier(n_neighbors=k).fit(x_train, y_train)\n",
    "    models.append(('KNN_{}'.format(k), knn))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model Name</th>\n",
       "      <th>Error rate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Logistic</td>\n",
       "      <td>0.271429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>LDA</td>\n",
       "      <td>0.277143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>QDA</td>\n",
       "      <td>0.300000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Naive Bayes</td>\n",
       "      <td>0.285714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>KNN_1</td>\n",
       "      <td>0.345714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>KNN_2</td>\n",
       "      <td>0.371429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>KNN_3</td>\n",
       "      <td>0.322857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>KNN_4</td>\n",
       "      <td>0.334286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>KNN_5</td>\n",
       "      <td>0.300000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>KNN_6</td>\n",
       "      <td>0.308571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>KNN_7</td>\n",
       "      <td>0.291429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>KNN_8</td>\n",
       "      <td>0.288571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>KNN_9</td>\n",
       "      <td>0.274286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>KNN_10</td>\n",
       "      <td>0.274286</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Model Name  Error rate\n",
       "0      Logistic    0.271429\n",
       "1           LDA    0.277143\n",
       "2           QDA    0.300000\n",
       "3   Naive Bayes    0.285714\n",
       "4         KNN_1    0.345714\n",
       "5         KNN_2    0.371429\n",
       "6         KNN_3    0.322857\n",
       "7         KNN_4    0.334286\n",
       "8         KNN_5    0.300000\n",
       "9         KNN_6    0.308571\n",
       "10        KNN_7    0.291429\n",
       "11        KNN_8    0.288571\n",
       "12        KNN_9    0.274286\n",
       "13       KNN_10    0.274286"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#c. Using the test set, create the list for prediction,names of the models,  prediction_probability, \n",
    "preds = []\n",
    "names=[]\n",
    "probs = []\n",
    "\n",
    "for name, model in models:\n",
    "    preds.append(model.predict(x_test))\n",
    "    names.append(name)\n",
    "    probs.append(model.predict_proba(x_test)[:, 1])\n",
    "    \n",
    "error_rates = [ (1 - accuracy_score(y_test, pred)) for pred in preds]\n",
    "\n",
    "dict = {'Model Name':names, \n",
    "        'Error rate': error_rates} \n",
    "  \n",
    "df = pd.DataFrame(dict) \n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Logistic: AUC = 0.757322\n",
      "LDA: AUC = 0.756430\n",
      "QDA: AUC = 0.736247\n",
      "Naive Bayes: AUC = 0.745503\n",
      "KNN_1: AUC = 0.614407\n",
      "KNN_2: AUC = 0.660608\n",
      "KNN_3: AUC = 0.685753\n",
      "KNN_4: AUC = 0.695863\n",
      "KNN_5: AUC = 0.715265\n",
      "KNN_6: AUC = 0.726862\n",
      "KNN_7: AUC = 0.744555\n",
      "KNN_8: AUC = 0.749350\n",
      "KNN_9: AUC = 0.747863\n",
      "KNN_10: AUC = 0.761095\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "def auc_roc(prob, name):\n",
    "    fpr, tpr, _ = roc_curve(y_test, prob)\n",
    "    aucs=auc(fpr, tpr)\n",
    "    print(name+ ': AUC = %f' % (aucs))\n",
    "# plot the roc curve for the model \n",
    "    plt.plot(fpr, tpr, label=name) \n",
    "    plt.xlabel('False Positive Rate') \n",
    "    plt.ylabel('True Positive Rate') \n",
    "    plt.legend()\n",
    "    \n",
    "plt.figure(figsize=(12,10))\n",
    "rand_probs = [0] * len(y_test)\n",
    "rand_fpr, rand_tpr, _ = roc_curve(y_test, rand_probs)\n",
    "plt.plot(rand_fpr, rand_tpr, linestyle='--', label='Random Classifier')\n",
    "for i, model in enumerate(models):\n",
    "    auc_roc(probs[i], names[i])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "d.Accroding to the above analyses, the best models for this dataset are Logistic and LDA, which produces the highest AUC and lowest error rate."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
